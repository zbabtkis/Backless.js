// Generated by CoffeeScript 1.6.3
(function() {
  var Database, EventEmitter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require("events").EventEmitter;

  Database = (function(_super) {
    __extends(Database, _super);

    function Database(options) {
      this.collections = [];
      this._indexes = {};
      this.add('$users', true);
      this.add('$groups', true);
      this.add('$permissions', true);
      this.add('$fields', true);
    }

    Database.prototype.add = function(collection, silent) {
      var index;
      index = this.collections.length;
      this.emit("onBeforeAddCollection", collection);
      if (collection !== {}) {
        this.collections.push(collection);
        this._indexes[collection.id] = index;
        if (!silent) {
          this.emit("onAddCollection", collection);
        }
      }
      return collection;
    };

    Database.prototype.use = function(id) {
      return this.collections[this._indexes[id]];
    };

    Database.prototype.grant = function(perm, group, field) {
      return perm = this.find(perm);
    };

    return Database;

  })(EventEmitter);

  module.exports = Database;

}).call(this);
