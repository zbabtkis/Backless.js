// Generated by CoffeeScript 1.6.3
(function() {
  var Field, Schema,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Field = require('./backless.field');

  Schema = (function() {
    function Schema(fields) {
      var field, _i, _len;
      this.fields = [];
      this._indexes = {};
      for (_i = 0, _len = fields.length; _i < _len; _i++) {
        field = fields[_i];
        this.addField(field);
      }
    }

    Schema.prototype.addField = function(field) {
      var index;
      field = new Field(field);
      index = this.fields.length;
      this.fields.push(field);
      this._indexes[field.name] = index;
      return this;
    };

    Schema.prototype.validate = function(model) {
      var TypeCaster, key, safeModel, value, _i, _len, _ref;
      safeModel = {};
      _ref = Object.keys(model);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        if (!(__indexOf.call(Object.keys(this._indexes), key) >= 0)) {
          continue;
        }
        TypeCaster = this.fields[this._indexes[key]].type;
        value = model[key];
        safeModel[key] = TypeCaster(value);
      }
      return safeModel;
    };

    return Schema;

  })();

  module.exports = Schema;

}).call(this);
